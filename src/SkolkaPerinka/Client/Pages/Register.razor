@page "/register"

<PageTitle>Register</PageTitle>
<MudContainer MaxWidth="MaxWidth.Medium" Class="pa-4">
    @if (_registerSuccessful == false)
{
    <MudText Typo="Typo.h4">Register</MudText>
    <EditForm Model="_userToRegister" OnValidSubmit="RegisterUser">
    <DataAnnotationsValidator/>
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    @*<MudTextField Label="First name" HelperText="Max. 8 characters"
                                  @bind-Value="_userToRegister.Username" For="@(() => model.Username)"/>*@
                    <MudTextField Label="Email" Class="mt-3"
                                  @bind-Value="_userToRegister.EmailAddress" For="@(() => _userToRegister.EmailAddress)"/>
                    <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                                  @bind-Value="_userToRegister.Password" For="@(() => _userToRegister.Password)" InputType="InputType.Password"/>
                    @*<MudTextField Label="Password" HelperText="Repeat the password" Class="mt-3"
                                  @bind-Value="model.Password2" For="@(() => model.Password2)" InputType="InputType.Password"/>*@
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="5">
            <MudPaper Class="pa-4 mud-height-full">
                <MudText Typo="Typo.subtitle2">Validation Summary</MudText>
                @if (_atemptToRegisterFailed == true)
                {
                    <MudText Color="@Color.Error">
                        <ValidationSummary />
                    </MudText>
                    <MudText Color="@Color.Info">
                        @_atemptToRegisterFailedErrorMessage
                        _________
                    </MudText>
                }
                else
                {
                    <MudText Color="Color.Success">Success</MudText>
                }
            </MudPaper>
        </MudItem>
        <MudItem xs="12">
            <MudText Typo="Typo.body2" Align="Align.Center">
                Fill out the form correctly to see the success message.
            </MudText>
        </MudItem>
    </MudGrid>
        </EditForm>
    }
    else
    {
        <MudText Color="@Color.Success">
            <h4>Register successful! Press the button bellow to go to the sign in page.</h4>
            <a href="/signin">Sign in</a>
        </MudText>
    }
</MudContainer>

@code {
    [Inject] HttpClient HttpClient { get; set; }
    private User _userToRegister = new() { EmailAddress = "user@example.com", Password = "Password1!" };
    private bool _registerSuccessful = false;
    private bool _atemptToRegisterFailed = false;
    private string? _atemptToRegisterFailedErrorMessage = null;

    private async Task RegisterUser()
    {
        _atemptToRegisterFailed = false;

        HttpResponseMessage httpResponseMessage = await HttpClient.PostAsJsonAsync("/api/user/register", _userToRegister);

        if (httpResponseMessage.IsSuccessStatusCode)
        {
            _registerSuccessful = true;
        }
        else
        {
            string serverErrorMessage = await httpResponseMessage.Content.ReadAsStringAsync();

            _atemptToRegisterFailedErrorMessage = $"{serverErrorMessage} Please change your input and try again.";
            _atemptToRegisterFailed = true;
        }
    }
}
