@using Blazored.LocalStorage
@using SkolkaPerinka.Client.Providers
@inject NavigationManager navigationManager
@page "/signIn"

<PageTitle>Sign in</PageTitle>
<MudContainer MaxWidth="MaxWidth.Medium" Class="pa-4">
    <MudText Typo="Typo.h4">Sign in</MudText>
    <EditForm Model="_userToSignIn" OnValidSubmit="signInUser">
    <DataAnnotationsValidator/>
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Email" Class="mt-3"
                                  @bind-Value="_userToSignIn.Email" For="@(() => _userToSignIn.Email)"/>
                    <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                                  @bind-Value="_userToSignIn.PasswordHash" For="@(() => _userToSignIn.PasswordHash)" InputType="InputType.Password"/>
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">signIn</MudButton>
                    <MudNavLink Href="register">register</MudNavLink>
                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="5">
            <MudPaper Class="pa-4 mud-height-full">
                <MudText Typo="Typo.subtitle2">Validation Summary</MudText>
                @if (_atemptTosignInFailed == true)
                {
                    <MudText Color="@Color.Error">
                        <ValidationSummary />
                    </MudText>
                    <MudText Color="@Color.Info">
                        Sign in failed. Please check yiur username anr/or password and try again.
                        _________
                    </MudText>
                }
                else
                {
                    <MudText Color="Color.Success">Success</MudText>
                }
            </MudPaper>
        </MudItem>
        <MudItem xs="12">
            <MudText Typo="Typo.body2" Align="Align.Center">
                Fill out the form correctly to see the success message.
            </MudText>
        </MudItem>
    </MudGrid>
    Director:
    UserName = director@example.com
    Password = Password1!
        </EditForm>
</MudContainer>

@code {
    [Inject] HttpClient HttpClient { get; set; }
    [Inject] ILocalStorageService LocalStorageService { get; set; }
    [Inject] AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    private User _userToSignIn = new() { Email = "parent@example.com", PasswordHash = "Password1!" };
    private bool _signInSuccessful = false;
    private bool _atemptTosignInFailed = false;

    private async Task signInUser()
    {
        HttpResponseMessage httpResponseMessage = await HttpClient.PostAsJsonAsync("/api/user/signin", _userToSignIn);

        if (httpResponseMessage.IsSuccessStatusCode)
        {
            string jsonWebToken = await httpResponseMessage.Content.ReadAsStringAsync();

            await LocalStorageService.SetItemAsync("bearerToken", jsonWebToken);

            await ((AppAuthenticationStateProvider)AuthenticationStateProvider).SignIn();

            HttpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("bearer", jsonWebToken);
            navigationManager.NavigateTo("/");
        }
    }
}